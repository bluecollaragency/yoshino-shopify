{%- style -%}
  .y-page-section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px;
  }

  @media screen and (min-width: 990px) {
    .y-page-section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="y-page-section-{{ section.id }}-padding">
  <div id="lottieContainer" class="tw-w-full tw-h-full tw-overflow-x-hidden"></div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bodymovin/5.6.6/lottie.min.js"></script>
<script src="https://unpkg.co/gsap@3/dist/gsap.min.js"></script>
<script src="https://unpkg.com/gsap@3/dist/ScrollTrigger.min.js"></script>

<script>

LottieScrollTrigger({
 target: "#lottieContainer",
 path: "//cdn.shopify.com/s/files/1/0622/3236/3174/t/6/assets/2000w-v2.json",
 speed: "medium",
 scrub: 0 // seconds it takes for the playhead to "catch up"
 // you can also add ANY ScrollTrigger values here too, like trigger, start, end, onEnter, onLeave, onUpdate, etc. See https://greensock.com/docs/v3/Plugins/ScrollTrigger
});

function LottieScrollTrigger(vars) {
    let playhead = {frame: 0},
        target = gsap.utils.toArray(vars.target)[0],
        speeds = {slow: "+=2000", medium: "+=1000", fast: "+=500"},
        st = {trigger: target, pin: true, start: "top top", end: speeds[vars.speed] || "+=1000", scrub: 1},
        ctx = gsap.context && gsap.context(),
        animation = lottie.loadAnimation({
            container: target,
            renderer: vars.renderer || "svg",
            loop: false,
            autoplay: false,
            path: vars.path,
            rendererSettings: vars.rendererSettings || { preserveAspectRatio: 'xMidYMid slice' }
        });
        for (let p in vars) { // let users override the ScrollTrigger defaults
            st[p] = vars[p];
        }
    animation.addEventListener("DOMLoaded", function() {
      let createTween = function() {
         animation.frameTween = gsap.to(playhead, {
            frame: animation.totalFrames - 1,
            ease: "none",
            onUpdate: () => animation.goToAndStop(playhead.frame, true),
            scrollTrigger: st
        });
        return () => animation.destroy && animation.destroy();
      };
      ctx && ctx.add ? ctx.add(createTween) : createTween();
      // in case there are any other ScrollTriggers on the page and the loading of this Lottie asset caused layout changes
      ScrollTrigger.sort();
      ScrollTrigger.refresh();    
    });
    return animation;
}
</script>





{% schema %}
  {
    "name": "Product Scroll Animation",
    "class": "tw-overflow-x-hidden",
    "settings": [
      {
        "type": "number",
        "id": "padding_top",
        "label": "t:sections.all.padding.padding_top",
        "default": 96
      },
      {
        "type": "number",
        "id": "padding_bottom",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 0
      }
    ],
    "presets": [
      {
        "name": "Product Scroll Animation"
      }
    ]
  }
{% endschema %}